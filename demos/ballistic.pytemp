import pymrt as xe
from pymrt.Geometry import Particle


class Shot(xe.Geometry.SdParticle):
    def __init__(self, type):
        # super().__init__()
        self.type = type.lower()
        self.particle = Particle()
        self.setCurrentType()

    def __setPistol(self):
        self.particle.setMass(0.01)
        self.particle.setDamping(0.99)
        self.particle.setVelocity((200., 200., 0.))
        self.particle.setAcceleration((0., -1., 0.))

    def __setArtillery(self):
        self.particle.setMass(200.0)
        self.particle.setDamping(0.99)
        self.particle.setVelocity((0., 30., 40.))
        self.particle.setAcceleration((0., -20., 0.))

    def __setFireball(self):
        self.particle.setMass(1.0)
        self.particle.setDamping(0.99)
        self.particle.setVelocity((0., 0., 10.))
        self.particle.setAcceleration((0., .6, 0.))

    def __setLaser(self):
        self.particle.setMass(0.1)
        self.particle.setDamping(0.99)
        self.particle.setVelocity((0., 0., 100.))
        self.particle.setAcceleration((0., 0., 0.))

    def setCurrentType(self):
        if self.type == "pistol":
            self.__setPistol()
        elif self.type == "artillery":
            self.__setArtillery()
        elif self.type == "fireball":
            self.__setFireball()
        elif self.type == "laser":
            self.__setLaser()
        else:
            raise ValueError("Invalid type of shot: {}".format(self.type))
        return Shot


if __name__ == "__main__":
    type = "artillery"
    trajectory = []
    shot = Shot(type)
    for _ in range(1000):
        shot.particle.integrate(0.01)
        trajectory.append([shot.particle.position[2], shot.particle.position[1]])
    shot.particle.clearAccumulator()
    print("type: ", type)



    import matplotlib.pyplot as plt
    plt.plot(*zip(*trajectory))
    plt.show()
